# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: MSPT Angular GUI Build

#on:
#  push:
#    branches: [ main ]
on: workflow_dispatch

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project-sources/frontend/mspt-angular-gui
    env:
      APP_VERSION: "${{ secrets.APP_VERSION }}"

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Create firebase.ts file
      run: |
        echo "export const firebaseConfig = {" > src/environments/firebase.ts
        echo "  firebaseConfig: {" >> src/environments/firebase.ts
        echo "    apiKey: '${{ secrets.FIREBASE_API_KEY }}'," >> src/environments/firebase.ts
        echo "    authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}'," >> src/environments/firebase.ts
        echo "    projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'," >> src/environments/firebase.ts
        echo "    storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}'," >> src/environments/firebase.ts
        echo "    messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'," >> src/environments/firebase.ts
        echo "    appId: '${{ secrets.FIREBASE_APP_ID }}'," >> src/environments/firebase.ts
        echo "    measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'" >> src/environments/firebase.ts
        echo "  }" >> src/environments/firebase.ts
        echo "}" >> src/environments/firebase.ts

    - name: Install npm packages
      run: npm install

    - name: Build Angular Project
      run: npm run bp-dist

    - name: Docker Build and Push
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: zbalogh/mspt-angular-ui
        tags: latest, ${{ env.APP_VERSION }}
        registry: docker.io
        directory: project-sources/frontend/mspt-angular-gui
        dockerfile: project-sources/frontend/mspt-angular-gui/Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
